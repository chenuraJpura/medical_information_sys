package view;

import controllers.appointmentController;
import controllers.encryptionController;
import controllers.medicalOfficers;
import java.awt.Color;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.TableModel;
import medi_info_system.startLogin;
import model.AppointmentModel;
import model.MedicalOfficerModel;
import model.UserModel;
import model.profilePictureModel;

public class homeMedicalOfficer extends javax.swing.JFrame {
    private int mousePx;
    private int mousePy;
    private int updateRow;
    private static medicalOfficers logged;
    private static String updatedString;
    private static String pass;
    public homeMedicalOfficer(medicalOfficers logged,String pass) throws FileNotFoundException {
        initComponents();
        setUndecorated(true);
        setBackground(new Color(0,0,0,0));
        this.logged=logged;
        this.pass=pass;
             
        TableCellListener tcl = new TableCellListener(viewAppointmentTable, action);
        //profile picture loader---------------------------------------------------
        profilePictureModel.profilePicLoader(profilePictureLabel,logged.getUserName());
        //------------------------------------------------------------------------
        //digital clock start----------------------------------
        new Thread(){
            public void run(){
                
                while(true){
                  
                    Calendar cal=new GregorianCalendar();
                    int hour=cal.get(Calendar.HOUR);
                    int min=cal.get(Calendar.MINUTE);
                    int sec=cal.get(Calendar.SECOND);
                  
                    int AM_PM=cal.get(Calendar.AM_PM);
                    String Am_Pm="";
                    if(AM_PM==1){
                        
                        Am_Pm="PM";
                        if(hour==0){
                            hour+=12;
                        }
                    }
                    else{
                        Am_Pm="AM";
                    }
                    
                   headerTextClock.setText(""+hour+":"+min+":"+sec+" "+Am_Pm);
                }
            }
        }.start();
        //digital clock end------------------------------------
        



//set a user model values to GUI
        medicalFName.setText(logged.getUserFirstName());
        medicalLName.setText(logged.getUserLastName());
        medicalAddress.setText(logged.getUserAddress());
        medicalPhoneNo.setText(String.valueOf(logged.getUserPhoneNo()));
        medicalOfficerFullName.setText(logged.getUserFirstName()+" "+logged.getUserLastName());
        medicalEmail.setText(logged.getMedicalStaffEmail());
        
         //appointment section
        deleteConformationYes.setVisible(false);
        deleteConformationNo.setVisible(false);
        
        AppIntialDeleteBtn.setEnabled(false);
        AppIntialSaveBtn.setEnabled(false);
        
        
        //appoinment count set--------------------------------------------
    int[] AppCountArry=AppointmentModel.appointmentCounter(logged.getUserFirstName()+" "+logged.getUserLastName());
    approvedApp.setText(String.valueOf(AppCountArry[0]));
    incomingApp.setText(String.valueOf(AppCountArry[2]));
    finshedApp.setText(String.valueOf(AppCountArry[1]));
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPannel = new keeptoo.KGradientPanel();
        header = new javax.swing.JPanel();
        closeMaxMinPanel = new javax.swing.JPanel();
        closeBtn = new keeptoo.KGradientPanel();
        maximumBtn = new keeptoo.KGradientPanel();
        minimumBtn = new keeptoo.KGradientPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        headerTextClock = new javax.swing.JLabel();
        main = new javax.swing.JPanel();
        content = new javax.swing.JPanel();
        Appointment = new javax.swing.JPanel();
        viewAppointmentBtn = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        finshedApp = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        incomingApp = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        kGradientPanel4 = new keeptoo.KGradientPanel();
        approvedApp = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        viewAppPanel = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        AppIntialSaveBtn = new javax.swing.JButton();
        AppIntialDeleteBtn = new javax.swing.JButton();
        areYouWantToDelete = new javax.swing.JLabel();
        deleteConformationYes = new javax.swing.JButton();
        deleteConformationNo = new javax.swing.JButton();
        resetMedicalOfficerPassword = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        viewAppointmentTable = new javax.swing.JTable();
        UserSetting = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        medicalUpdateNotfication = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        profilePictureLabel = new javax.swing.JLabel();
        medicalFName = new javax.swing.JTextField();
        medicalLName = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        allergiesLabel = new javax.swing.JLabel();
        medicalEmail = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        medicalPhoneNo = new javax.swing.JTextField();
        jLabel65 = new javax.swing.JLabel();
        addNewUserAddress = new javax.swing.JScrollPane();
        medicalAddress = new javax.swing.JTextArea();
        saveMedicalBtnConformation = new javax.swing.JButton();
        jLabel70 = new javax.swing.JLabel();
        medicalOldPassword = new javax.swing.JPasswordField();
        jLabel72 = new javax.swing.JLabel();
        medicalNewPassword = new javax.swing.JPasswordField();
        jLabel73 = new javax.swing.JLabel();
        medicalNewPasswordConformation = new javax.swing.JPasswordField();
        changePassword = new javax.swing.JButton();
        medicalOfficerFullName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        profilePicImgBrowse = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        footer = new javax.swing.JPanel();
        sideBar = new javax.swing.JPanel();
        user = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        appoint = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        logOutBtn = new javax.swing.JButton();
        weightText = new javax.swing.JTextField();
        heightText = new javax.swing.JTextField();
        bmiCalBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        bmiDisplayText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        mainPannel.setkBorderRadius(50);
        mainPannel.setkEndColor(new java.awt.Color(255, 255, 255));
        mainPannel.setkStartColor(new java.awt.Color(255, 255, 255));
        mainPannel.setOpaque(false);
        mainPannel.setLayout(new java.awt.BorderLayout());

        header.setOpaque(false);
        header.setPreferredSize(new java.awt.Dimension(900, 40));
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });
        header.setLayout(new java.awt.BorderLayout());

        closeMaxMinPanel.setBackground(new java.awt.Color(255, 255, 255));
        closeMaxMinPanel.setMinimumSize(new java.awt.Dimension(250, 40));
        closeMaxMinPanel.setOpaque(false);
        closeMaxMinPanel.setPreferredSize(new java.awt.Dimension(332, 35));

        closeBtn.setkEndColor(new java.awt.Color(255, 0, 153));
        closeBtn.setkStartColor(new java.awt.Color(255, 0, 102));
        closeBtn.setOpaque(false);
        closeBtn.setPreferredSize(new java.awt.Dimension(100, 30));
        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout closeBtnLayout = new javax.swing.GroupLayout(closeBtn);
        closeBtn.setLayout(closeBtnLayout);
        closeBtnLayout.setHorizontalGroup(
            closeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        closeBtnLayout.setVerticalGroup(
            closeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        maximumBtn.setkEndColor(new java.awt.Color(255, 204, 51));
        maximumBtn.setkStartColor(new java.awt.Color(255, 153, 0));
        maximumBtn.setOpaque(false);
        maximumBtn.setPreferredSize(new java.awt.Dimension(100, 30));

        javax.swing.GroupLayout maximumBtnLayout = new javax.swing.GroupLayout(maximumBtn);
        maximumBtn.setLayout(maximumBtnLayout);
        maximumBtnLayout.setHorizontalGroup(
            maximumBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        maximumBtnLayout.setVerticalGroup(
            maximumBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        minimumBtn.setForeground(new java.awt.Color(204, 204, 204));
        minimumBtn.setkEndColor(new java.awt.Color(0, 255, 204));
        minimumBtn.setkStartColor(new java.awt.Color(0, 255, 204));
        minimumBtn.setOpaque(false);
        minimumBtn.setPreferredSize(new java.awt.Dimension(100, 30));
        minimumBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimumBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout minimumBtnLayout = new javax.swing.GroupLayout(minimumBtn);
        minimumBtn.setLayout(minimumBtnLayout);
        minimumBtnLayout.setHorizontalGroup(
            minimumBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        minimumBtnLayout.setVerticalGroup(
            minimumBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout closeMaxMinPanelLayout = new javax.swing.GroupLayout(closeMaxMinPanel);
        closeMaxMinPanel.setLayout(closeMaxMinPanelLayout);
        closeMaxMinPanelLayout.setHorizontalGroup(
            closeMaxMinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, closeMaxMinPanelLayout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addComponent(minimumBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maximumBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        closeMaxMinPanelLayout.setVerticalGroup(
            closeMaxMinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closeMaxMinPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(closeMaxMinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minimumBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maximumBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        header.add(closeMaxMinPanel, java.awt.BorderLayout.LINE_END);

        jPanel2.setOpaque(false);
        jPanel2.setPreferredSize(new java.awt.Dimension(563, 40));

        jLabel49.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(0, 102, 255));
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_medical_doctor_20px.png"))); // NOI18N
        jLabel49.setText("Medical Dashboard");

        headerTextClock.setFont(new java.awt.Font("Montserrat", 0, 17)); // NOI18N
        headerTextClock.setForeground(new java.awt.Color(0, 102, 255));
        headerTextClock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(200, Short.MAX_VALUE)
                .addComponent(jLabel49)
                .addGap(46, 46, 46)
                .addComponent(headerTextClock, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel49, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(headerTextClock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        header.add(jPanel2, java.awt.BorderLayout.CENTER);

        mainPannel.add(header, java.awt.BorderLayout.PAGE_START);

        main.setLayout(new java.awt.BorderLayout());

        content.setLayout(new java.awt.CardLayout());

        Appointment.setLayout(new java.awt.BorderLayout());

        viewAppointmentBtn.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        viewAppointmentBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewAppointmentBtnMouseClicked(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        kGradientPanel1.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setkBorderRadius(35);
        kGradientPanel1.setkEndColor(new java.awt.Color(0, 102, 255));
        kGradientPanel1.setkGradientFocus(40);
        kGradientPanel1.setkStartColor(new java.awt.Color(173, 206, 253));
        kGradientPanel1.setLayout(new java.awt.BorderLayout());

        finshedApp.setFont(new java.awt.Font("Oswald", 0, 48)); // NOI18N
        finshedApp.setForeground(new java.awt.Color(255, 255, 255));
        finshedApp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        finshedApp.setText("10");
        finshedApp.setPreferredSize(new java.awt.Dimension(150, 70));
        kGradientPanel1.add(finshedApp, java.awt.BorderLayout.CENTER);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_test_passed_40px.png"))); // NOI18N
        jLabel14.setPreferredSize(new java.awt.Dimension(38, 100));
        kGradientPanel1.add(jLabel14, java.awt.BorderLayout.PAGE_START);

        jLabel15.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("<html><body style=\"text-align:center;\">Finshed<br>Appointments</body></html>");
        jLabel15.setMinimumSize(new java.awt.Dimension(106, 106));
        jLabel15.setPreferredSize(new java.awt.Dimension(106, 70));
        kGradientPanel1.add(jLabel15, java.awt.BorderLayout.PAGE_END);

        kGradientPanel3.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel3.setkBorderRadius(35);
        kGradientPanel3.setLayout(new java.awt.BorderLayout());

        incomingApp.setFont(new java.awt.Font("Oswald", 0, 48)); // NOI18N
        incomingApp.setForeground(new java.awt.Color(255, 255, 255));
        incomingApp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        incomingApp.setText("10");
        incomingApp.setPreferredSize(new java.awt.Dimension(150, 70));
        kGradientPanel3.add(incomingApp, java.awt.BorderLayout.CENTER);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_inbox_30px.png"))); // NOI18N
        jLabel11.setPreferredSize(new java.awt.Dimension(38, 100));
        kGradientPanel3.add(jLabel11, java.awt.BorderLayout.PAGE_START);

        jLabel12.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("<html><body style=\"text-align:center;\">Incoming<br>Appointments</body></html>");
        jLabel12.setMinimumSize(new java.awt.Dimension(106, 106));
        jLabel12.setPreferredSize(new java.awt.Dimension(106, 70));
        kGradientPanel3.add(jLabel12, java.awt.BorderLayout.PAGE_END);

        kGradientPanel4.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel4.setkBorderRadius(35);
        kGradientPanel4.setkEndColor(new java.awt.Color(51, 153, 255));
        kGradientPanel4.setkGradientFocus(50);
        kGradientPanel4.setkStartColor(new java.awt.Color(21, 233, 227));
        kGradientPanel4.setLayout(new java.awt.BorderLayout());

        approvedApp.setFont(new java.awt.Font("Oswald", 0, 48)); // NOI18N
        approvedApp.setForeground(new java.awt.Color(255, 255, 255));
        approvedApp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        approvedApp.setText("10");
        approvedApp.setPreferredSize(new java.awt.Dimension(150, 70));
        kGradientPanel4.add(approvedApp, java.awt.BorderLayout.CENTER);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_doorbell_40px.png"))); // NOI18N
        jLabel8.setPreferredSize(new java.awt.Dimension(38, 100));
        kGradientPanel4.add(jLabel8, java.awt.BorderLayout.PAGE_START);

        jLabel9.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("<html><body style=\"text-align:center;\">Today<br>Appointments</body></html>");
        jLabel9.setMinimumSize(new java.awt.Dimension(106, 106));
        jLabel9.setPreferredSize(new java.awt.Dimension(106, 70));
        kGradientPanel4.add(jLabel9, java.awt.BorderLayout.PAGE_END);

        jLabel87.setBackground(new java.awt.Color(255, 255, 255));
        jLabel87.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/home_main.png"))); // NOI18N
        jLabel87.setOpaque(true);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(kGradientPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel87)
                        .addGap(141, 141, 141))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 189, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kGradientPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(111, 111, 111))
        );

        viewAppointmentBtn.addTab("Appointment Status", jPanel4);

        viewAppPanel.setBackground(new java.awt.Color(246, 250, 251));
        viewAppPanel.setLayout(new java.awt.BorderLayout());

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setPreferredSize(new java.awt.Dimension(700, 40));

        AppIntialSaveBtn.setBackground(new java.awt.Color(40, 167, 69));
        AppIntialSaveBtn.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        AppIntialSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        AppIntialSaveBtn.setText("Save");
        AppIntialSaveBtn.setPreferredSize(new java.awt.Dimension(72, 35));
        AppIntialSaveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AppIntialSaveBtnMouseClicked(evt);
            }
        });

        AppIntialDeleteBtn.setBackground(new java.awt.Color(220, 53, 69));
        AppIntialDeleteBtn.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        AppIntialDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        AppIntialDeleteBtn.setText("Delete");
        AppIntialDeleteBtn.setPreferredSize(new java.awt.Dimension(78, 26));
        AppIntialDeleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AppIntialDeleteBtnMouseClicked(evt);
            }
        });

        areYouWantToDelete.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N

        deleteConformationYes.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        deleteConformationYes.setText("Yes");
        deleteConformationYes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteConformationYesMouseClicked(evt);
            }
        });
        deleteConformationYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteConformationYesActionPerformed(evt);
            }
        });

        deleteConformationNo.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        deleteConformationNo.setText("No");
        deleteConformationNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteConformationNoMouseClicked(evt);
            }
        });

        resetMedicalOfficerPassword.setBackground(new java.awt.Color(255, 153, 0));
        resetMedicalOfficerPassword.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        resetMedicalOfficerPassword.setForeground(new java.awt.Color(255, 255, 255));
        resetMedicalOfficerPassword.setText("State");
        resetMedicalOfficerPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMedicalOfficerPasswordMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AppIntialSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AppIntialDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetMedicalOfficerPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(areYouWantToDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteConformationYes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteConformationNo)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AppIntialSaveBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AppIntialDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(deleteConformationYes)
                        .addComponent(deleteConformationNo)
                        .addComponent(resetMedicalOfficerPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(8, Short.MAX_VALUE))
            .addComponent(areYouWantToDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        viewAppPanel.add(jPanel18, java.awt.BorderLayout.PAGE_START);

        viewAppointmentTable.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        viewAppointmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient name", "Medical Officer", "Appointment Date", "Appointment Time", "Symptoms", "Status", "RefID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        viewAppointmentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewAppointmentTableMouseClicked(evt);
            }
        });
        viewAppointmentTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                viewAppointmentTablePropertyChange(evt);
            }
        });
        jScrollPane7.setViewportView(viewAppointmentTable);

        viewAppPanel.add(jScrollPane7, java.awt.BorderLayout.CENTER);

        viewAppointmentBtn.addTab("View Appointment", viewAppPanel);

        Appointment.add(viewAppointmentBtn, java.awt.BorderLayout.CENTER);

        content.add(Appointment, "card2");

        UserSetting.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(95, 0, 231));
        jPanel6.setPreferredSize(new java.awt.Dimension(700, 30));

        medicalUpdateNotfication.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        medicalUpdateNotfication.setForeground(new java.awt.Color(255, 255, 255));
        medicalUpdateNotfication.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(medicalUpdateNotfication, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(medicalUpdateNotfication, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
        );

        UserSetting.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(729, 594));

        kGradientPanel2.setkBorderRadius(200);
        kGradientPanel2.setkFillBackground(false);
        kGradientPanel2.setOpaque(false);
        kGradientPanel2.setPreferredSize(new java.awt.Dimension(100, 100));
        kGradientPanel2.setLayout(new java.awt.BorderLayout());

        profilePictureLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profilePictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_hospital_sign_24px.png"))); // NOI18N
        kGradientPanel2.add(profilePictureLabel, java.awt.BorderLayout.CENTER);

        medicalFName.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N

        medicalLName.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N

        jLabel22.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel22.setText("First Name");

        jLabel23.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel23.setText("Last Name");

        allergiesLabel.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        allergiesLabel.setText("Email");

        medicalEmail.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N

        jLabel61.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel61.setText("Phone No");

        medicalPhoneNo.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        medicalPhoneNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicalPhoneNoActionPerformed(evt);
            }
        });

        jLabel65.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel65.setText("Address");

        medicalAddress.setColumns(20);
        medicalAddress.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        medicalAddress.setRows(5);
        addNewUserAddress.setViewportView(medicalAddress);

        saveMedicalBtnConformation.setBackground(new java.awt.Color(95, 0, 231));
        saveMedicalBtnConformation.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        saveMedicalBtnConformation.setForeground(new java.awt.Color(255, 255, 255));
        saveMedicalBtnConformation.setText("Update");
        saveMedicalBtnConformation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMedicalBtnConformationMouseClicked(evt);
            }
        });

        jLabel70.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel70.setText("Enter Your Old Password");

        medicalOldPassword.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        medicalOldPassword.setMaximumSize(new java.awt.Dimension(500, 50));
        medicalOldPassword.setPreferredSize(new java.awt.Dimension(64, 30));

        jLabel72.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel72.setText("Enter Your New Password");

        medicalNewPassword.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        medicalNewPassword.setMaximumSize(new java.awt.Dimension(500, 50));
        medicalNewPassword.setPreferredSize(new java.awt.Dimension(64, 30));

        jLabel73.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel73.setText("Retype You New Password");

        medicalNewPasswordConformation.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        medicalNewPasswordConformation.setMaximumSize(new java.awt.Dimension(500, 50));
        medicalNewPasswordConformation.setPreferredSize(new java.awt.Dimension(64, 30));

        changePassword.setBackground(new java.awt.Color(95, 0, 231));
        changePassword.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        changePassword.setForeground(new java.awt.Color(255, 255, 255));
        changePassword.setText("Change Password");
        changePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changePasswordMouseClicked(evt);
            }
        });

        medicalOfficerFullName.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        medicalOfficerFullName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_name_25px_2.png"))); // NOI18N

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_phone_25px.png"))); // NOI18N

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_home_address_25px.png"))); // NOI18N

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_email_25px.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_password_25px.png"))); // NOI18N

        profilePicImgBrowse.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        profilePicImgBrowse.setText("Browse");
        profilePicImgBrowse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profilePicImgBrowseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(medicalPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(jLabel61)
                            .addComponent(jLabel65)
                            .addComponent(addNewUserAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(allergiesLabel)
                            .addComponent(medicalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(medicalLName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(saveMedicalBtnConformation, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(medicalFName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(medicalOldPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(medicalNewPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel70)
                            .addComponent(jLabel72)
                            .addComponent(jLabel73)
                            .addComponent(medicalNewPasswordConformation, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(changePassword))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(102, 102, 102))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(medicalOfficerFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profilePicImgBrowse))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(medicalOfficerFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(profilePicImgBrowse)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel70)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(medicalOldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel72)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(medicalNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel73)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(medicalNewPasswordConformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(changePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(medicalFName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(medicalLName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel61)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(medicalPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel65)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addNewUserAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(allergiesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(medicalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveMedicalBtnConformation, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        UserSetting.add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel3.setBackground(new java.awt.Color(95, 0, 231));
        jPanel3.setPreferredSize(new java.awt.Dimension(700, 30));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        UserSetting.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        content.add(UserSetting, "card5");

        main.add(content, java.awt.BorderLayout.CENTER);

        mainPannel.add(main, java.awt.BorderLayout.CENTER);

        footer.setOpaque(false);
        footer.setPreferredSize(new java.awt.Dimension(900, 40));

        javax.swing.GroupLayout footerLayout = new javax.swing.GroupLayout(footer);
        footer.setLayout(footerLayout);
        footerLayout.setHorizontalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        footerLayout.setVerticalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        mainPannel.add(footer, java.awt.BorderLayout.PAGE_END);

        sideBar.setBackground(new java.awt.Color(173, 206, 253));
        sideBar.setPreferredSize(new java.awt.Dimension(200, 620));

        user.setBackground(new java.awt.Color(100, 153, 254));
        user.setPreferredSize(new java.awt.Dimension(200, 50));
        user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSwitch(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_medical_doctor_20px.png"))); // NOI18N
        jLabel47.setText("User");
        jLabel47.setPreferredSize(new java.awt.Dimension(50, 20));

        javax.swing.GroupLayout userLayout = new javax.swing.GroupLayout(user);
        user.setLayout(userLayout);
        userLayout.setHorizontalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        userLayout.setVerticalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLayout.createSequentialGroup()
                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        appoint.setBackground(new java.awt.Color(241, 246, 253));
        appoint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSwitch(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(0, 102, 255));
        jLabel4.setFont(new java.awt.Font("Montserrat", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_shortlist_20px.png"))); // NOI18N
        jLabel4.setText("Appointment");

        javax.swing.GroupLayout appointLayout = new javax.swing.GroupLayout(appoint);
        appoint.setLayout(appointLayout);
        appointLayout.setHorizontalGroup(
            appointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appointLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        appointLayout.setVerticalGroup(
            appointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        logOutBtn.setBackground(new java.awt.Color(255, 0, 102));
        logOutBtn.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        logOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        logOutBtn.setText("Logout");
        logOutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutBtnMouseClicked(evt);
            }
        });

        weightText.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N

        heightText.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N

        bmiCalBtn.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        bmiCalBtn.setText("Calculate");
        bmiCalBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bmiCalBtnMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Weight(Kg)");

        jLabel5.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Height(m)");

        jLabel7.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("BMI CALCULATER");

        bmiDisplayText.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        bmiDisplayText.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout sideBarLayout = new javax.swing.GroupLayout(sideBar);
        sideBar.setLayout(sideBarLayout);
        sideBarLayout.setHorizontalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideBarLayout.createSequentialGroup()
                .addComponent(appoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(user, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(sideBarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5)
                        .addComponent(bmiCalBtn)
                        .addComponent(logOutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(heightText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(weightText, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addComponent(bmiDisplayText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sideBarLayout.setVerticalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideBarLayout.createSequentialGroup()
                .addComponent(appoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weightText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(heightText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bmiCalBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bmiDisplayText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 241, Short.MAX_VALUE)
                .addComponent(logOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        mainPannel.add(sideBar, java.awt.BorderLayout.LINE_START);

        getContentPane().add(mainPannel, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(900, 700));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    
    //notification clear--------------------------------------------------------
    private void notificationClear(JLabel notificationLabel){   
    new Timer(1500, (ActionEvent e) -> {
        notificationLabel.setText("");
    }).start();
    }
    //retunr updated ID from relevent table
     private int getUpdatedIDFromReleventTable(JTable relevantTable,
            int updateRowNo,
            int columnNo){
            TableModel model = relevantTable.getModel();
            
         return Integer.parseInt(String.valueOf(model.getValueAt(updateRowNo,columnNo))); 
    }
     //return selected record state
    private String getSelectedState(JTable relevantTable){
        TableModel model = relevantTable.getModel();
        int selectedRowIndex = relevantTable.getSelectedRow();
        
        if(String.valueOf(model.getValueAt(selectedRowIndex,5)).equals("Approved")){
            return "finished";
        }else {
            return "Approved";
        }
        
    } 
    
    private String getSelectedRowStringFromReleventTable(JTable relevantTable){
        TableModel model = relevantTable.getModel();
        
        int selectedRowIndex = relevantTable.getSelectedRow();
                    
          String objectString="";  
          for(int i = 0; i < model.getColumnCount(); i++){
            if(i==0){  
            objectString=String.valueOf(model.getValueAt(selectedRowIndex,i)); 
            }else{
            objectString=objectString+","+String.valueOf(model.getValueAt(selectedRowIndex,i));
            }
         }
          
          
         return objectString; 
    }
    
    private String getUpdatedRowStringFromReleventTable(JTable relevantTable,int updateRowNo){
        TableModel model = relevantTable.getModel();
                  
          String objectString="";  
          for(int i = 0; i < model.getColumnCount(); i++){
            if(i==0){  
            objectString=String.valueOf(model.getValueAt(updateRowNo,i)); 
            }else{
            objectString=objectString+","+String.valueOf(model.getValueAt(updateRowNo,i));
            }
         }
          
          
         return objectString; 
    }
    
    Action action = new AbstractAction(){
    @Override
    public void actionPerformed(ActionEvent e)
    {
        homeMedicalOfficer.TableCellListener tcl = (homeMedicalOfficer.TableCellListener)e.getSource();
        updateRow=tcl.getRow();
              
    }
};
    
    private void closeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeBtnMouseClicked

    private void minimumBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimumBtnMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimumBtnMouseClicked

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        int xCordinate=evt.getXOnScreen();
        int yCordinate=evt.getYOnScreen();

        this.setLocation(xCordinate-mousePx,yCordinate-mousePy);
    }//GEN-LAST:event_headerMouseDragged

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        mousePx=evt.getX();
        mousePy=evt.getY();
    }//GEN-LAST:event_headerMousePressed

    private void logOutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutBtnMouseClicked
        medicalOfficers nullObj=null;
        logged=nullObj;
        new startLogin().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logOutBtnMouseClicked

    private void AppIntialSaveBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AppIntialSaveBtnMouseClicked
        
        areYouWantToDelete.setVisible(true);
        areYouWantToDelete.setText("Record Has Been Updated");
    
        notificationClear(areYouWantToDelete);
         AppointmentModel.updateAppointmentByRefID(getUpdatedIDFromReleventTable(
                viewAppointmentTable,
                updateRow,
                6),
                getUpdatedRowStringFromReleventTable(viewAppointmentTable,updateRow));
                AppointmentModel.viewAppointmentByUser(viewAppointmentTable,
                logged.getUserFirstName()+" "+logged.getUserLastName(),
                2);
                        
    }//GEN-LAST:event_AppIntialSaveBtnMouseClicked

    private void AppIntialDeleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AppIntialDeleteBtnMouseClicked
        if(!viewAppointmentTable.getSelectionModel().isSelectionEmpty()){
            areYouWantToDelete.setVisible(true);
            areYouWantToDelete.setText("Are you sure want to delete this record?");
            deleteConformationYes.setVisible(true);
            deleteConformationNo.setVisible(true);
        }else{
            areYouWantToDelete.setVisible(true);
            areYouWantToDelete.setText("Please Select the Record To Delete");
            notificationClear(areYouWantToDelete);
        }
    }//GEN-LAST:event_AppIntialDeleteBtnMouseClicked

    private void deleteConformationYesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteConformationYesMouseClicked
        if(!viewAppointmentTable.getSelectionModel().isSelectionEmpty()){

            appointmentController deleteAppObj=new appointmentController(getSelectedRowStringFromReleventTable(viewAppointmentTable));
            AppointmentModel.deleteAppointment(deleteAppObj);
            AppointmentModel.viewAppointmentByUser(viewAppointmentTable,
                    logged.getUserFirstName()+" "+logged.getUserLastName(),
                    2);
            deleteConformationYes.setVisible(false);
            deleteConformationNo.setVisible(false);
            areYouWantToDelete.setVisible(false);

        }else{

            areYouWantToDelete.setText("Please Select the Row to Delete");
            deleteConformationYes.setVisible(false);
            deleteConformationNo.setVisible(false);
            notificationClear(areYouWantToDelete);
        }
    }//GEN-LAST:event_deleteConformationYesMouseClicked

    private void deleteConformationYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteConformationYesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteConformationYesActionPerformed

    private void deleteConformationNoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteConformationNoMouseClicked
        deleteConformationYes.setVisible(false);
        deleteConformationNo.setVisible(false);
        areYouWantToDelete.setVisible(false);
    }//GEN-LAST:event_deleteConformationNoMouseClicked

    private void viewAppointmentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewAppointmentTableMouseClicked
        if (evt.getClickCount()==1) {     // to detect doble click events

            JTable target = (JTable)evt.getSource();
            updatedString=getUpdatedRowStringFromReleventTable(viewAppointmentTable,target.getSelectedRow());

        }

        if(!viewAppointmentTable.getSelectionModel().isSelectionEmpty()){
            AppIntialDeleteBtn.setEnabled(true);
            AppIntialSaveBtn.setEnabled(true);
        }
    }//GEN-LAST:event_viewAppointmentTableMouseClicked

    private void viewAppointmentTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_viewAppointmentTablePropertyChange
        TableCellListener tcl = new TableCellListener(viewAppointmentTable, action);
    }//GEN-LAST:event_viewAppointmentTablePropertyChange

    private void viewAppointmentBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewAppointmentBtnMouseClicked
        AppointmentModel.viewAppointmentByUser(viewAppointmentTable,
                logged.getUserFirstName()+" "+logged.getUserLastName(),
                2);
    }//GEN-LAST:event_viewAppointmentBtnMouseClicked

    private void medicalPhoneNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicalPhoneNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medicalPhoneNoActionPerformed

    private void saveMedicalBtnConformationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMedicalBtnConformationMouseClicked
        MedicalOfficerModel.deleteMedical(this.logged);
        medicalOfficers updatedObj=logged;
        updatedObj.setUserFirstName(medicalFName.getText());
        updatedObj.setUserLastName(medicalLName.getText());
        updatedObj.setUserPhoneNo(Integer.parseInt(medicalPhoneNo.getText()));
        updatedObj.setUserAddress(medicalAddress.getText());
        updatedObj.setMedicalStaffEmail(medicalEmail.getText());
        MedicalOfficerModel.writingTXT(updatedObj.toString());
        try {
            new homeMedicalOfficer(updatedObj,pass).setVisible(true);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(homeMedicalOfficer.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
    }//GEN-LAST:event_saveMedicalBtnConformationMouseClicked

    private void changePasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changePasswordMouseClicked
        boolean cond1=(new String(this.medicalNewPassword.getPassword())).equals(
            new String(this.medicalNewPasswordConformation.getPassword()));
        if(cond1){
            if(encryptionController.getEncryptedString(
                (new String(medicalOldPassword.getPassword()))
            ).equals(pass)){
            UserModel.updatePasswordByUser(logged.getUserName(),
                new String(this.medicalNewPassword.getPassword()));
            medicalUpdateNotfication.setText("Passwords Updated!");
            notificationClear(medicalUpdateNotfication);

        }else{
            medicalUpdateNotfication.setText("Old Password Wrong");
            notificationClear(medicalUpdateNotfication);
        }

        }else{
            medicalUpdateNotfication.setText("Password Are UnMatched");
            notificationClear(medicalUpdateNotfication);
        }
    }//GEN-LAST:event_changePasswordMouseClicked

    private void menuSwitch(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSwitch
       if(evt.getSource()==user){
     
            UserSetting.setVisible(true);
            Appointment.setVisible(false);
        }
        if(evt.getSource()==appoint){
            
            UserSetting.setVisible(false);
            Appointment.setVisible(true);
        }
    }//GEN-LAST:event_menuSwitch

    private void profilePicImgBrowseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profilePicImgBrowseMouseClicked
        profilePictureModel.changeProfilePicture(medicalUpdateNotfication,logged.getUserNIC(),logged.getUserName());
        //profile picture loader---------------------------------------------------
        profilePictureModel.profilePicLoader(profilePictureLabel,logged.getUserName());
        //------------------------------------------------------------------------
    }//GEN-LAST:event_profilePicImgBrowseMouseClicked

    private void resetMedicalOfficerPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMedicalOfficerPasswordMouseClicked
           if(!viewAppointmentTable.getSelectionModel().isSelectionEmpty()){

               try {
                   AppointmentModel.updateAppointmentState(getSelectedRowStringFromReleventTable(viewAppointmentTable),getSelectedState(viewAppointmentTable));
               } catch (FileNotFoundException ex) {
                   Logger.getLogger(homeMedicalOfficer.class.getName()).log(Level.SEVERE, null, ex);
               }
                       AppointmentModel.viewAppointmentByUser(viewAppointmentTable,
                logged.getUserFirstName()+" "+logged.getUserLastName(),
                2);
            areYouWantToDelete.setText("Status Changed");
            notificationClear(areYouWantToDelete);
                    //appoinment count set--------------------------------------------
               try {
                int[] AppCountArry;

                   AppCountArry = AppointmentModel.appointmentCounter(logged.getUserFirstName()+" "+logged.getUserLastName());
                    approvedApp.setText(String.valueOf(AppCountArry[0]));
                    incomingApp.setText(String.valueOf(AppCountArry[2]));
                    finshedApp.setText(String.valueOf(AppCountArry[1]));
               } catch (FileNotFoundException ex) {
                   Logger.getLogger(homeMedicalOfficer.class.getName()).log(Level.SEVERE, null, ex);
               }
    
    
            
        }else{
            areYouWantToDelete.setText("Select the Row to change");
            notificationClear(areYouWantToDelete);
        }
    }//GEN-LAST:event_resetMedicalOfficerPasswordMouseClicked

    private void bmiCalBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bmiCalBtnMouseClicked
        if(!weightText.getText().equals("") && !heightText.getText().equals("")){ 
         double weight =Double.parseDouble(weightText.getText());
         double height =Double.parseDouble(heightText.getText());
         double BMI = weight / (height * height);
         BMI=Math.round(BMI);
         if(BMI<18.5){
            bmiDisplayText.setText(Double.toString(BMI)+" Underweight");
         }else if(BMI<24.9){
            bmiDisplayText.setText(Double.toString(BMI)+" Healthy"); 
         }else if(BMI<29.9){
            bmiDisplayText.setText(Double.toString(BMI)+" Overweight");
         }else if(BMI>30.0){
            bmiDisplayText.setText(Double.toString(BMI)+" Obese");
         }else{
            bmiDisplayText.setText(Double.toString(BMI)+" Severe obesity"); 
         }
        }else{
            bmiDisplayText.setText("Please Enter Value");
            
        }
         
         
    }//GEN-LAST:event_bmiCalBtnMouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(homeMedicalOfficer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        //</editor-fold>

        /* Create and display the form */
        

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new homeMedicalOfficer(logged,pass).setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(homeMedicalOfficer.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AppIntialDeleteBtn;
    private javax.swing.JButton AppIntialSaveBtn;
    private javax.swing.JPanel Appointment;
    private javax.swing.JPanel UserSetting;
    private javax.swing.JScrollPane addNewUserAddress;
    private javax.swing.JLabel allergiesLabel;
    private javax.swing.JPanel appoint;
    private javax.swing.JLabel approvedApp;
    private javax.swing.JLabel areYouWantToDelete;
    private javax.swing.JButton bmiCalBtn;
    private javax.swing.JLabel bmiDisplayText;
    private javax.swing.JButton changePassword;
    private keeptoo.KGradientPanel closeBtn;
    private javax.swing.JPanel closeMaxMinPanel;
    private javax.swing.JPanel content;
    private javax.swing.JButton deleteConformationNo;
    private javax.swing.JButton deleteConformationYes;
    private javax.swing.JLabel finshedApp;
    private javax.swing.JPanel footer;
    private javax.swing.JPanel header;
    private javax.swing.JLabel headerTextClock;
    private javax.swing.JTextField heightText;
    private javax.swing.JLabel incomingApp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane7;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    private keeptoo.KGradientPanel kGradientPanel4;
    private javax.swing.JButton logOutBtn;
    private javax.swing.JPanel main;
    private keeptoo.KGradientPanel mainPannel;
    private keeptoo.KGradientPanel maximumBtn;
    private javax.swing.JTextArea medicalAddress;
    private javax.swing.JTextField medicalEmail;
    private javax.swing.JTextField medicalFName;
    private javax.swing.JTextField medicalLName;
    private javax.swing.JPasswordField medicalNewPassword;
    private javax.swing.JPasswordField medicalNewPasswordConformation;
    private javax.swing.JLabel medicalOfficerFullName;
    private javax.swing.JPasswordField medicalOldPassword;
    private javax.swing.JTextField medicalPhoneNo;
    private javax.swing.JLabel medicalUpdateNotfication;
    private keeptoo.KGradientPanel minimumBtn;
    private javax.swing.JButton profilePicImgBrowse;
    private javax.swing.JLabel profilePictureLabel;
    private javax.swing.JButton resetMedicalOfficerPassword;
    private javax.swing.JButton saveMedicalBtnConformation;
    private javax.swing.JPanel sideBar;
    private javax.swing.JPanel user;
    private javax.swing.JPanel viewAppPanel;
    private javax.swing.JTabbedPane viewAppointmentBtn;
    private javax.swing.JTable viewAppointmentTable;
    private javax.swing.JTextField weightText;
    // End of variables declaration//GEN-END:variables
public class TableCellListener implements PropertyChangeListener, Runnable{
	private JTable table;
	private Action action;

	private int row;
	private int column;
	private Object oldValue;
	private Object newValue;

	/**
	 *  Create a TableCellListener.
	 *
	 *  @param table   the table to be monitored for data changes
	 *  @param action  the Action to invoke when cell data is changed
	 */
	public TableCellListener(JTable table, Action action)
	{
		this.table = table;
		this.action = action;
		this.table.addPropertyChangeListener( this );
	}

	/**
	 *  Create a TableCellListener with a copy of all the data relevant to
	 *  the change of data for a given cell.
	 *
	 *  @param row  the row of the changed cell
	 *  @param column  the column of the changed cell
	 *  @param oldValue  the old data of the changed cell
	 *  @param newValue  the new data of the changed cell
	 */
	private TableCellListener(JTable table, int row, int column, Object oldValue, Object newValue)
	{
		this.table = table;
		this.row = row;
		this.column = column;
		this.oldValue = oldValue;
		this.newValue = newValue;
	}

	/**
	 *  Get the column that was last edited
	 *
	 *  @return the column that was edited
	 */
	public int getColumn()
	{
		return column;
	}

	/**
	 *  Get the new value in the cell
	 *
	 *  @return the new value in the cell
	 */
	public Object getNewValue()
	{
		return newValue;
	}

	/**
	 *  Get the old value of the cell
	 *
	 *  @return the old value of the cell
	 */
	public Object getOldValue()
	{
		return oldValue;
	}

	/**
	 *  Get the row that was last edited
	 *
	 *  @return the row that was edited
	 */
	public int getRow()
	{
		return row;
	}

	/**
	 *  Get the table of the cell that was changed
	 *
	 *  @return the table of the cell that was changed
	 */
	public JTable getTable()
	{
		return table;
	}
//
//  Implement the PropertyChangeListener interface
//
	@Override
	public void propertyChange(PropertyChangeEvent e)
	{
		//  A cell has started/stopped editing

		if ("tableCellEditor".equals(e.getPropertyName()))
		{
			if (table.isEditing())
				processEditingStarted();
			else
				processEditingStopped();
		}
	}

	/*
	 *  Save information of the cell about to be edited
	 */
	private void processEditingStarted()
	{
		//  The invokeLater is necessary because the editing row and editing
		//  column of the table have not been set when the "tableCellEditor"
		//  PropertyChangeEvent is fired.
		//  This results in the "run" method being invoked

		SwingUtilities.invokeLater( this );
	}
	/*
	 *  See above.
	 */
	@Override
	public void run()
	{
		row = table.convertRowIndexToModel( table.getEditingRow() );
		column = table.convertColumnIndexToModel( table.getEditingColumn() );
		oldValue = table.getModel().getValueAt(row, column);
		newValue = null;
	}

	/*
	 *	Update the Cell history when necessary
	 */
	private void processEditingStopped()
	{
		newValue = table.getModel().getValueAt(row, column);

		//  The data has changed, invoke the supplied Action

		if (! newValue.equals(oldValue))
		{
			//  Make a copy of the data in case another cell starts editing
			//  while processing this change

			TableCellListener tcl = new TableCellListener(
				getTable(), getRow(), getColumn(), getOldValue(), getNewValue());

			ActionEvent event = new ActionEvent(
				tcl,
				ActionEvent.ACTION_PERFORMED,
				"");
			action.actionPerformed(event);
		}
	}
}



}
